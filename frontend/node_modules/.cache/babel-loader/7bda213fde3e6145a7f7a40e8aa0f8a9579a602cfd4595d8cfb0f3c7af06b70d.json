{"ast":null,"code":"var _jsxFileName = \"/Users/rayzang/Downloads/Ansible-web/ansible-web-platform/frontend/src/components/Terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Terminal as TerminalIcon, Power, Square, RotateCcw, Download } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Terminal = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s(({\n  onExecute\n}, ref) => {\n  _s();\n  const [output, setOutput] = useState([]);\n  const [websocket, setWebsocket] = useState(null);\n  const [currentProcess, setCurrentProcess] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const outputRef = useRef(null);\n\n  // WebSocket连接管理\n  useEffect(() => {\n    connectWebSocket();\n    return () => {\n      if (websocket) {\n        websocket.close();\n      }\n    };\n  }, []);\n\n  // 自动滚动到底部\n  useEffect(() => {\n    if (outputRef.current) {\n      outputRef.current.scrollTop = outputRef.current.scrollHeight;\n    }\n  }, [output]);\n  const connectWebSocket = () => {\n    try {\n      const ws = new WebSocket('ws://localhost:8080');\n      ws.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n        setConnectionStatus('connected');\n        addOutputLine('系统', '终端连接已建立', 'success');\n      };\n      ws.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n          addOutputLine('错误', '消息解析失败', 'error');\n        }\n      };\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        setIsConnected(false);\n        setConnectionStatus('disconnected');\n        addOutputLine('系统', '终端连接已断开', 'warning');\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n        setConnectionStatus('error');\n        addOutputLine('错误', 'WebSocket连接错误', 'error');\n      };\n      setWebsocket(ws);\n    } catch (error) {\n      console.error('Failed to connect WebSocket:', error);\n      setConnectionStatus('error');\n      addOutputLine('错误', 'WebSocket连接失败', 'error');\n    }\n  };\n\n  // 格式化输出内容\n  const formatOutputContent = (content, type) => {\n    if (!content) return content;\n\n    // 处理JSON格式化\n    if (type === 'output' && content.includes('\"changed\": true')) {\n      try {\n        // 提取JSON部分\n        const jsonMatch = content.match(/{\"changed\".*?}/s);\n        if (jsonMatch) {\n          const jsonStr = jsonMatch[0];\n          const parsed = JSON.parse(jsonStr);\n\n          // 提取主要信息\n          const mainPart = content.substring(0, content.indexOf('=> '));\n          let formattedOutput = mainPart + '=> {\\n';\n\n          // 格式化主要属性\n          if (parsed.changed !== undefined) formattedOutput += `  \"changed\": ${parsed.changed},\\n`;\n          if (parsed.rc !== undefined) formattedOutput += `  \"rc\": ${parsed.rc},\\n`;\n\n          // 如果有stdout输出，显示主要内容\n          if (parsed.stdout) {\n            const stdoutLines = parsed.stdout_lines || parsed.stdout.split('\\\\r\\\\n').filter(l => l.trim());\n            formattedOutput += `  \"output\": [\\n`;\n            stdoutLines.forEach(line => {\n              if (line.trim()) {\n                formattedOutput += `    \"${line.trim()}\",\\n`;\n              }\n            });\n            formattedOutput = formattedOutput.replace(/,$/, '') + '\\n  ]\\n';\n          }\n          formattedOutput += '}';\n          return formattedOutput;\n        }\n      } catch (e) {\n        // 如果解析失败，返回原始内容\n      }\n    }\n\n    // 处理多行输出的格式\n    return content.replace(/\\\\r\\\\n/g, '\\n').replace(/\\\\n/g, '\\n').trim();\n  };\n  const handleWebSocketMessage = data => {\n    const {\n      type,\n      processId,\n      data: messageData,\n      command,\n      exitCode,\n      success,\n      error\n    } = data;\n    switch (type) {\n      case 'connection_established':\n        addOutputLine('系统', `✓ WebSocket连接已建立 (客户端ID: ${data.clientId})`, 'info');\n        break;\n      case 'process_started':\n        setCurrentProcess(processId);\n        addOutputLine('系统', `▶ 进程已启动`, 'info');\n        addOutputLine('系统', `  命令: ${command}`, 'info');\n        addOutputLine('系统', `  进程ID: ${processId}`, 'info');\n        addOutputLine('系统', '=' + '='.repeat(60), 'info');\n        break;\n      case 'stdout':\n        if (messageData) {\n          const formattedContent = formatOutputContent(messageData.toString(), 'output');\n          // 按行分割输出\n          const lines = formattedContent.split('\\n');\n          lines.forEach(line => {\n            if (line.trim()) {\n              // 识别不同类型的输出\n              if (line.includes('PLAY [') || line.includes('TASK [')) {\n                addOutputLine('Ansible', line, 'success');\n              } else if (line.includes('PLAY RECAP')) {\n                addOutputLine('Ansible', '\\n' + line, 'success');\n              } else if (line.includes('ok:') || line.includes('changed:')) {\n                addOutputLine('Ansible', line, 'output');\n              } else if (line.startsWith('  ')) {\n                // 缩进的内容（JSON数据等）\n                addOutputLine('详情', line, 'info');\n              } else {\n                addOutputLine('输出', line, 'output');\n              }\n            }\n          });\n        }\n        break;\n      case 'stderr':\n        if (messageData) {\n          const lines = messageData.toString().split('\\n');\n          lines.forEach(line => {\n            if (line.trim() && !line.includes('debug1:')) {\n              addOutputLine('警告', line.trim(), 'warning');\n            }\n          });\n        }\n        break;\n      case 'process_complete':\n        setCurrentProcess(null);\n        const status = success ? '成功' : '失败';\n        const statusType = success ? 'success' : 'error';\n        const icon = success ? '✓' : '✗';\n        addOutputLine('系统', '=' + '='.repeat(60), 'info');\n        addOutputLine('系统', `${icon} 进程执行${status} (退出码: ${exitCode})`, statusType);\n        if (onExecute) {\n          onExecute({\n            success,\n            exitCode,\n            processId\n          });\n        }\n        break;\n      case 'process_error':\n        setCurrentProcess(null);\n        addOutputLine('错误', `✗ 进程错误: ${error}`, 'error');\n        break;\n      case 'execution_error':\n        addOutputLine('错误', `✗ 执行错误: ${error}`, 'error');\n        break;\n      case 'pong':\n        // Heartbeat response\n        break;\n      default:\n        console.log('Unknown WebSocket message type:', type);\n    }\n  };\n  const addOutputLine = (source, content, type = 'output') => {\n    const timestamp = new Date().toLocaleTimeString();\n    const newLine = {\n      id: Date.now() + Math.random(),\n      timestamp,\n      source,\n      content: content.toString(),\n      type\n    };\n    setOutput(prev => [...prev, newLine]);\n  };\n  const executeCommand = (playbookName, targetHosts = 'all', options = {}) => {\n    console.log('Terminal executeCommand called:', {\n      playbookName,\n      targetHosts,\n      options\n    });\n    if (!websocket || websocket.readyState !== WebSocket.OPEN) {\n      addOutputLine('错误', 'WebSocket未连接', 'error');\n      console.error('WebSocket not connected:', websocket === null || websocket === void 0 ? void 0 : websocket.readyState);\n      return;\n    }\n    const message = {\n      type: 'execute_playbook',\n      payload: {\n        playbookName,\n        targetHosts,\n        options\n      }\n    };\n    console.log('Sending WebSocket message:', message);\n    websocket.send(JSON.stringify(message));\n    addOutputLine('系统', `执行命令: ansible-playbook ${playbookName} --limit ${targetHosts}`, 'info');\n  };\n  const killCurrentProcess = () => {\n    if (!currentProcess || !websocket) {\n      return;\n    }\n    const message = {\n      type: 'kill_process',\n      payload: {\n        processId: currentProcess\n      }\n    };\n    websocket.send(JSON.stringify(message));\n    addOutputLine('系统', '正在终止当前进程...', 'warning');\n  };\n  const clearTerminal = () => {\n    setOutput([]);\n    addOutputLine('系统', '终端已清空', 'info');\n  };\n  const exportLog = () => {\n    const logContent = output.map(line => `[${line.timestamp}] ${line.source}: ${line.content}`).join('\\n');\n    const blob = new Blob([logContent], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `terminal-log-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    addOutputLine('系统', '日志已导出', 'success');\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'connected':\n        return 'text-green-400';\n      case 'disconnected':\n        return 'text-yellow-400';\n      case 'error':\n        return 'text-red-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n  const getLineTypeColor = type => {\n    switch (type) {\n      case 'success':\n        return 'text-green-400 font-semibold';\n      case 'error':\n        return 'text-red-400 font-semibold';\n      case 'warning':\n        return 'text-yellow-400';\n      case 'info':\n        return 'text-cyan-400';\n      case 'output':\n        return 'text-green-300';\n      default:\n        return 'text-gray-300';\n    }\n  };\n  const getSourceColor = source => {\n    switch (source) {\n      case '系统':\n        return 'text-blue-400';\n      case 'Ansible':\n        return 'text-green-400';\n      case '详情':\n        return 'text-cyan-300';\n      case '输出':\n        return 'text-white';\n      case '错误':\n        return 'text-red-400';\n      case '警告':\n        return 'text-yellow-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n\n  // 对外暴露执行命令的接口\n  React.useImperativeHandle(ref, () => ({\n    executeCommand,\n    killCurrentProcess,\n    clearTerminal\n  }), [websocket, currentProcess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between px-4 py-3 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(TerminalIcon, {\n          className: \"h-5 w-5 text-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: \"\\u5B9E\\u65F6\\u7EC8\\u7AEF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `h-2 w-2 rounded-full ${getStatusColor(connectionStatus)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-sm font-medium ${getStatusColor(connectionStatus)}`,\n            children: connectionStatus === 'connected' ? '已连接' : connectionStatus === 'disconnected' ? '未连接' : '连接错误'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [currentProcess && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: killCurrentProcess,\n          className: \"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700\",\n          title: \"\\u7EC8\\u6B62\\u8FDB\\u7A0B\",\n          children: [/*#__PURE__*/_jsxDEV(Square, {\n            className: \"h-4 w-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), \"\\u505C\\u6B62\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearTerminal,\n          className: \"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\",\n          title: \"\\u6E05\\u7A7A\\u7EC8\\u7AEF\",\n          children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n            className: \"h-4 w-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), \"\\u6E05\\u7A7A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportLog,\n          className: \"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\",\n          title: \"\\u5BFC\\u51FA\\u65E5\\u5FD7\",\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            className: \"h-4 w-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), \"\\u5BFC\\u51FA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => executeCommand('test-playbook.yml', 'all'),\n          className: \"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\",\n          title: \"\\u6D4B\\u8BD5\\u6267\\u884C\",\n          children: \"\\u6D4B\\u8BD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), !isConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWebSocket,\n          className: \"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700\",\n          title: \"\\u91CD\\u65B0\\u8FDE\\u63A5\",\n          children: [/*#__PURE__*/_jsxDEV(Power, {\n            className: \"h-4 w-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), \"\\u8FDE\\u63A5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: outputRef,\n      className: \"bg-gray-900 text-green-400 p-4 font-mono text-sm h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-600 scrollbar-track-gray-800\",\n      style: {\n        fontFamily: 'Consolas, Monaco, \"Lucida Console\", monospace'\n      },\n      children: output.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500 text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(TerminalIcon, {\n          className: \"mx-auto h-12 w-12 mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u7EC8\\u7AEF\\u51C6\\u5907\\u5C31\\u7EEA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs mt-1\",\n          children: \"\\u7B49\\u5F85\\u6267\\u884C\\u547D\\u4EE4...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: [output.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex hover:bg-gray-800 hover:bg-opacity-30 px-2 py-0.5 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 mr-3 text-xs shrink-0\",\n            children: [\"[\", line.timestamp, \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `mr-3 text-xs font-medium shrink-0 w-16 ${getSourceColor(line.source)}`,\n            children: [line.source, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `flex-1 whitespace-pre-wrap break-words ${getLineTypeColor(line.type)}`,\n            children: line.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }, this)]\n        }, line.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this)), currentProcess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center text-blue-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"animate-pulse mr-2\",\n            children: \"\\u258B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs\",\n            children: \"\\u8FDB\\u7A0B\\u8FD0\\u884C\\u4E2D...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}, \"pOxMCLdXfHpOCphWbNoKojc6TlA=\")), \"pOxMCLdXfHpOCphWbNoKojc6TlA=\");\n_c2 = Terminal;\nexport default Terminal;\nvar _c, _c2;\n$RefreshReg$(_c, \"Terminal$React.forwardRef\");\n$RefreshReg$(_c2, \"Terminal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Terminal","TerminalIcon","Power","Square","RotateCcw","Download","jsxDEV","_jsxDEV","_s","forwardRef","_c","onExecute","ref","output","setOutput","websocket","setWebsocket","currentProcess","setCurrentProcess","isConnected","setIsConnected","connectionStatus","setConnectionStatus","outputRef","connectWebSocket","close","current","scrollTop","scrollHeight","ws","WebSocket","onopen","console","log","addOutputLine","onmessage","event","data","JSON","parse","handleWebSocketMessage","error","onclose","onerror","formatOutputContent","content","type","includes","jsonMatch","match","jsonStr","parsed","mainPart","substring","indexOf","formattedOutput","changed","undefined","rc","stdout","stdoutLines","stdout_lines","split","filter","l","trim","forEach","line","replace","e","processId","messageData","command","exitCode","success","clientId","repeat","formattedContent","toString","lines","startsWith","status","statusType","icon","source","timestamp","Date","toLocaleTimeString","newLine","id","now","Math","random","prev","executeCommand","playbookName","targetHosts","options","readyState","OPEN","message","payload","send","stringify","killCurrentProcess","clearTerminal","exportLog","logContent","map","join","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","getStatusColor","getLineTypeColor","getSourceColor","useImperativeHandle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","style","fontFamily","length","_c2","$RefreshReg$"],"sources":["/Users/rayzang/Downloads/Ansible-web/ansible-web-platform/frontend/src/components/Terminal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Terminal as TerminalIcon, Power, Square, RotateCcw, Download } from 'lucide-react';\n\nconst Terminal = React.forwardRef(({ onExecute }, ref) => {\n  const [output, setOutput] = useState([]);\n  const [websocket, setWebsocket] = useState(null);\n  const [currentProcess, setCurrentProcess] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const outputRef = useRef(null);\n\n  // WebSocket连接管理\n  useEffect(() => {\n    connectWebSocket();\n    \n    return () => {\n      if (websocket) {\n        websocket.close();\n      }\n    };\n  }, []);\n\n  // 自动滚动到底部\n  useEffect(() => {\n    if (outputRef.current) {\n      outputRef.current.scrollTop = outputRef.current.scrollHeight;\n    }\n  }, [output]);\n\n  const connectWebSocket = () => {\n    try {\n      const ws = new WebSocket('ws://localhost:8080');\n      \n      ws.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n        setConnectionStatus('connected');\n        addOutputLine('系统', '终端连接已建立', 'success');\n      };\n\n      ws.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n          addOutputLine('错误', '消息解析失败', 'error');\n        }\n      };\n\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        setIsConnected(false);\n        setConnectionStatus('disconnected');\n        addOutputLine('系统', '终端连接已断开', 'warning');\n      };\n\n      ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setConnectionStatus('error');\n        addOutputLine('错误', 'WebSocket连接错误', 'error');\n      };\n\n      setWebsocket(ws);\n    } catch (error) {\n      console.error('Failed to connect WebSocket:', error);\n      setConnectionStatus('error');\n      addOutputLine('错误', 'WebSocket连接失败', 'error');\n    }\n  };\n\n  // 格式化输出内容\n  const formatOutputContent = (content, type) => {\n    if (!content) return content;\n    \n    // 处理JSON格式化\n    if (type === 'output' && content.includes('\"changed\": true')) {\n      try {\n        // 提取JSON部分\n        const jsonMatch = content.match(/{\"changed\".*?}/s);\n        if (jsonMatch) {\n          const jsonStr = jsonMatch[0];\n          const parsed = JSON.parse(jsonStr);\n          \n          // 提取主要信息\n          const mainPart = content.substring(0, content.indexOf('=> '));\n          let formattedOutput = mainPart + '=> {\\n';\n          \n          // 格式化主要属性\n          if (parsed.changed !== undefined) formattedOutput += `  \"changed\": ${parsed.changed},\\n`;\n          if (parsed.rc !== undefined) formattedOutput += `  \"rc\": ${parsed.rc},\\n`;\n          \n          // 如果有stdout输出，显示主要内容\n          if (parsed.stdout) {\n            const stdoutLines = parsed.stdout_lines || parsed.stdout.split('\\\\r\\\\n').filter(l => l.trim());\n            formattedOutput += `  \"output\": [\\n`;\n            stdoutLines.forEach(line => {\n              if (line.trim()) {\n                formattedOutput += `    \"${line.trim()}\",\\n`;\n              }\n            });\n            formattedOutput = formattedOutput.replace(/,$/, '') + '\\n  ]\\n';\n          }\n          \n          formattedOutput += '}';\n          return formattedOutput;\n        }\n      } catch (e) {\n        // 如果解析失败，返回原始内容\n      }\n    }\n    \n    // 处理多行输出的格式\n    return content\n      .replace(/\\\\r\\\\n/g, '\\n')\n      .replace(/\\\\n/g, '\\n')\n      .trim();\n  };\n\n  const handleWebSocketMessage = (data) => {\n    const { type, processId, data: messageData, command, exitCode, success, error } = data;\n\n    switch (type) {\n      case 'connection_established':\n        addOutputLine('系统', `✓ WebSocket连接已建立 (客户端ID: ${data.clientId})`, 'info');\n        break;\n\n      case 'process_started':\n        setCurrentProcess(processId);\n        addOutputLine('系统', `▶ 进程已启动`, 'info');\n        addOutputLine('系统', `  命令: ${command}`, 'info');\n        addOutputLine('系统', `  进程ID: ${processId}`, 'info');\n        addOutputLine('系统', '=' + '='.repeat(60), 'info');\n        break;\n\n      case 'stdout':\n        if (messageData) {\n          const formattedContent = formatOutputContent(messageData.toString(), 'output');\n          // 按行分割输出\n          const lines = formattedContent.split('\\n');\n          lines.forEach(line => {\n            if (line.trim()) {\n              // 识别不同类型的输出\n              if (line.includes('PLAY [') || line.includes('TASK [')) {\n                addOutputLine('Ansible', line, 'success');\n              } else if (line.includes('PLAY RECAP')) {\n                addOutputLine('Ansible', '\\n' + line, 'success');\n              } else if (line.includes('ok:') || line.includes('changed:')) {\n                addOutputLine('Ansible', line, 'output');\n              } else if (line.startsWith('  ')) {\n                // 缩进的内容（JSON数据等）\n                addOutputLine('详情', line, 'info');\n              } else {\n                addOutputLine('输出', line, 'output');\n              }\n            }\n          });\n        }\n        break;\n\n      case 'stderr':\n        if (messageData) {\n          const lines = messageData.toString().split('\\n');\n          lines.forEach(line => {\n            if (line.trim() && !line.includes('debug1:')) {\n              addOutputLine('警告', line.trim(), 'warning');\n            }\n          });\n        }\n        break;\n\n      case 'process_complete':\n        setCurrentProcess(null);\n        const status = success ? '成功' : '失败';\n        const statusType = success ? 'success' : 'error';\n        const icon = success ? '✓' : '✗';\n        addOutputLine('系统', '=' + '='.repeat(60), 'info');\n        addOutputLine('系统', `${icon} 进程执行${status} (退出码: ${exitCode})`, statusType);\n        if (onExecute) {\n          onExecute({ success, exitCode, processId });\n        }\n        break;\n\n      case 'process_error':\n        setCurrentProcess(null);\n        addOutputLine('错误', `✗ 进程错误: ${error}`, 'error');\n        break;\n\n      case 'execution_error':\n        addOutputLine('错误', `✗ 执行错误: ${error}`, 'error');\n        break;\n\n      case 'pong':\n        // Heartbeat response\n        break;\n\n      default:\n        console.log('Unknown WebSocket message type:', type);\n    }\n  };\n\n  const addOutputLine = (source, content, type = 'output') => {\n    const timestamp = new Date().toLocaleTimeString();\n    const newLine = {\n      id: Date.now() + Math.random(),\n      timestamp,\n      source,\n      content: content.toString(),\n      type\n    };\n    \n    setOutput(prev => [...prev, newLine]);\n  };\n\n  const executeCommand = (playbookName, targetHosts = 'all', options = {}) => {\n    console.log('Terminal executeCommand called:', { playbookName, targetHosts, options });\n    \n    if (!websocket || websocket.readyState !== WebSocket.OPEN) {\n      addOutputLine('错误', 'WebSocket未连接', 'error');\n      console.error('WebSocket not connected:', websocket?.readyState);\n      return;\n    }\n\n    const message = {\n      type: 'execute_playbook',\n      payload: {\n        playbookName,\n        targetHosts,\n        options\n      }\n    };\n\n    console.log('Sending WebSocket message:', message);\n    websocket.send(JSON.stringify(message));\n    addOutputLine('系统', `执行命令: ansible-playbook ${playbookName} --limit ${targetHosts}`, 'info');\n  };\n\n  const killCurrentProcess = () => {\n    if (!currentProcess || !websocket) {\n      return;\n    }\n\n    const message = {\n      type: 'kill_process',\n      payload: {\n        processId: currentProcess\n      }\n    };\n\n    websocket.send(JSON.stringify(message));\n    addOutputLine('系统', '正在终止当前进程...', 'warning');\n  };\n\n  const clearTerminal = () => {\n    setOutput([]);\n    addOutputLine('系统', '终端已清空', 'info');\n  };\n\n  const exportLog = () => {\n    const logContent = output.map(line => \n      `[${line.timestamp}] ${line.source}: ${line.content}`\n    ).join('\\n');\n    \n    const blob = new Blob([logContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `terminal-log-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    \n    addOutputLine('系统', '日志已导出', 'success');\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'connected':\n        return 'text-green-400';\n      case 'disconnected':\n        return 'text-yellow-400';\n      case 'error':\n        return 'text-red-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n\n  const getLineTypeColor = (type) => {\n    switch (type) {\n      case 'success':\n        return 'text-green-400 font-semibold';\n      case 'error':\n        return 'text-red-400 font-semibold';\n      case 'warning':\n        return 'text-yellow-400';\n      case 'info':\n        return 'text-cyan-400';\n      case 'output':\n        return 'text-green-300';\n      default:\n        return 'text-gray-300';\n    }\n  };\n\n  const getSourceColor = (source) => {\n    switch (source) {\n      case '系统':\n        return 'text-blue-400';\n      case 'Ansible':\n        return 'text-green-400';\n      case '详情':\n        return 'text-cyan-300';\n      case '输出':\n        return 'text-white';\n      case '错误':\n        return 'text-red-400';\n      case '警告':\n        return 'text-yellow-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n\n  // 对外暴露执行命令的接口\n  React.useImperativeHandle(ref, () => ({\n    executeCommand,\n    killCurrentProcess,\n    clearTerminal\n  }), [websocket, currentProcess]);\n\n  return (\n    <div className=\"bg-white shadow rounded-lg\">\n      {/* Terminal Header */}\n      <div className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200\">\n        <div className=\"flex items-center space-x-3\">\n          <TerminalIcon className=\"h-5 w-5 text-gray-600\" />\n          <h3 className=\"text-lg font-medium text-gray-900\">实时终端</h3>\n          <div className=\"flex items-center space-x-2\">\n            <div className={`h-2 w-2 rounded-full ${getStatusColor(connectionStatus)}`}></div>\n            <span className={`text-sm font-medium ${getStatusColor(connectionStatus)}`}>\n              {connectionStatus === 'connected' ? '已连接' : \n               connectionStatus === 'disconnected' ? '未连接' : '连接错误'}\n            </span>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {currentProcess && (\n            <button\n              onClick={killCurrentProcess}\n              className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700\"\n              title=\"终止进程\"\n            >\n              <Square className=\"h-4 w-4 mr-1\" />\n              停止\n            </button>\n          )}\n          \n          <button\n            onClick={clearTerminal}\n            className=\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            title=\"清空终端\"\n          >\n            <RotateCcw className=\"h-4 w-4 mr-1\" />\n            清空\n          </button>\n          \n          <button\n            onClick={exportLog}\n            className=\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            title=\"导出日志\"\n          >\n            <Download className=\"h-4 w-4 mr-1\" />\n            导出\n          </button>\n\n          <button\n            onClick={() => executeCommand('test-playbook.yml', 'all')}\n            className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n            title=\"测试执行\"\n          >\n            测试\n          </button>\n          \n          {!isConnected && (\n            <button\n              onClick={connectWebSocket}\n              className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700\"\n              title=\"重新连接\"\n            >\n              <Power className=\"h-4 w-4 mr-1\" />\n              连接\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Terminal Content */}\n      <div \n        ref={outputRef}\n        className=\"bg-gray-900 text-green-400 p-4 font-mono text-sm h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-600 scrollbar-track-gray-800\"\n        style={{ fontFamily: 'Consolas, Monaco, \"Lucida Console\", monospace' }}\n      >\n        {output.length === 0 ? (\n          <div className=\"text-gray-500 text-center py-8\">\n            <TerminalIcon className=\"mx-auto h-12 w-12 mb-2\" />\n            <p>终端准备就绪</p>\n            <p className=\"text-xs mt-1\">等待执行命令...</p>\n          </div>\n        ) : (\n          <div className=\"space-y-1\">\n            {output.map((line) => (\n              <div key={line.id} className=\"flex hover:bg-gray-800 hover:bg-opacity-30 px-2 py-0.5 rounded\">\n                <span className=\"text-gray-500 mr-3 text-xs shrink-0\">\n                  [{line.timestamp}]\n                </span>\n                <span className={`mr-3 text-xs font-medium shrink-0 w-16 ${getSourceColor(line.source)}`}>\n                  {line.source}:\n                </span>\n                <span className={`flex-1 whitespace-pre-wrap break-words ${getLineTypeColor(line.type)}`}>\n                  {line.content}\n                </span>\n              </div>\n            ))}\n            {currentProcess && (\n              <div className=\"flex items-center text-blue-400\">\n                <span className=\"animate-pulse mr-2\">▋</span>\n                <span className=\"text-xs\">进程运行中...</span>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n});\n\nexport default Terminal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}